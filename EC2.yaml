AWSTemplateFormatVersion: 2010-09-09
Description: 
  Sample template to provision an EC2 Instance with public IP. Create a Security Group and associate with this EC2.
  
Parameters:

  KeyPairName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName' 
    Default: websvr2

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro

  InstanceImageId:
    Description: EC2 Image Id from this region
    Type: AWS::EC2::Image::Id
    Default: ami-082105f875acab993 # defaults for amazon linux for free tier

Resources:

  # EC2 instance which will have access for http and ssh
  WebsvrEC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPairName
      ImageId: !Ref InstanceImageId
      NetworkInterfaces:
        - GroupSet:
            - !ImportValue 
              'Fn::Sub': 'websvr-websvrSG'
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !ImportValue 
            'Fn::Sub': 'websvr-PublicSubnet1'
      Tags: 
       - Key: Name
         Value: Websvr-EC2

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      # Should allow access from the local VPC as well as office Internet gateways
      GroupDescription: ALB security group
      VpcId: !ImportValue websvr-VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0         

  EC2TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200'
      Name: EC2TargetGroup
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
       - Key: deregistration_delay.timeout_seconds
         Value: '20'
      Targets:
       - Id: !Ref WebsvrEC2Instance
         Port: 80
      UnhealthyThresholdCount: 3
      VpcId: !ImportValue websvr-VPC
      Tags:
       - Key: Name
         Value: EC2TargetGroup
       - Key: Port
         Value: 80 

  ALBListener:
   Type: AWS::ElasticLoadBalancingV2::Listener
   Properties:
     DefaultActions:
       - Type: forward
         TargetGroupArn: !Ref EC2TargetGroup
     LoadBalancerArn: !Ref ApplicationLoadBalancer
     Port: 80
     Protocol: HTTP

  ApplicationLoadBalancer:
   Type: AWS::ElasticLoadBalancingV2::LoadBalancer
   Properties:
     Scheme: internet-facing # or internal
     Subnets:
       - Fn::ImportValue:
           !Sub 'websvr-PublicSubnet1'   
       - Fn::ImportValue:
           !Sub 'websvr-PublicSubnet2'       
     SecurityGroups:
     - Ref: ALBSecurityGroup               

# output important values for easy viewing in cloudformation dashboard
Outputs:
  InstanceId:
    Description: InstanceId of the first EC2 instance
    Value: !Ref WebsvrEC2Instance
    Export:
      Name: !Sub "${AWS::StackName}"

  PublicDNS:
    Description: Public DNS Name of the EC2 instance
    Value: !GetAtt 
      - WebsvrEC2Instance
      - PublicDnsName

  PublicIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt 
      - WebsvrEC2Instance
      - PublicIp

  ALBHostName:
    Description: 'Application Load Balancer Hostname'
    Value:
      !GetAtt ApplicationLoadBalancer.DNSName      
